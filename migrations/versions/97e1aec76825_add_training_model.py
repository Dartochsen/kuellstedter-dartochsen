"""Add Training model

Revision ID: 97e1aec76825
Revises: 539351ef2f60
Create Date: 2025-03-03 20:58:43.299207

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '97e1aec76825'
down_revision = '539351ef2f60'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Entfernen der abh√§ngigen Constraints
    op.drop_constraint('game_players_game_id_fkey', 'game_players', type_='foreignkey')
    op.drop_constraint('throw_data_game_id_fkey', 'throw_data', type_='foreignkey')
    op.drop_constraint('event_participants_event_id_fkey', 'event_participants', type_='foreignkey')
    
    with op.batch_alter_table('forum_antworten', schema=None) as batch_op:
        batch_op.drop_index('ix_forum_antworten_erstellungsdatum')

    op.execute('DROP TABLE IF EXISTS forum_antworten CASCADE')
    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_index('idx_game_date_winner')
        batch_op.drop_index('idx_game_players')
        batch_op.drop_index('ix_games_date')
        batch_op.drop_index('ix_games_player1_id')
        batch_op.drop_index('ix_games_player2_id')
        batch_op.drop_index('ix_games_winner_id')

    op.execute('DROP TABLE IF EXISTS games CASCADE')
    op.execute('DROP TABLE IF EXISTS events CASCADE')
    op.execute('DROP TABLE IF EXISTS game CASCADE')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_email')
        batch_op.drop_index('ix_user_username')

    op.execute('DROP TABLE IF EXISTS "user" CASCADE')
    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.drop_index('idx_player_stats')
        batch_op.drop_index('ix_players_active')
        batch_op.drop_index('ix_players_join_date')
        batch_op.drop_index('ix_players_name')

    op.execute('DROP TABLE IF EXISTS players CASCADE')
    op.execute('DROP TABLE IF EXISTS forum_thema CASCADE')
    with op.batch_alter_table('game_players', schema=None) as batch_op:
        batch_op.drop_index('idx_game_players_score')

    op.execute('DROP TABLE IF EXISTS game_players CASCADE')
    op.execute('DROP TABLE IF EXISTS event CASCADE')
    op.execute('DROP TABLE IF EXISTS event_participants CASCADE')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index('ix_posts_created_at')
        batch_op.drop_index('ix_posts_is_published')
        batch_op.drop_index('ix_posts_title')

    op.execute('DROP TABLE IF EXISTS posts CASCADE')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_email')
        batch_op.drop_index('ix_users_is_admin')
        batch_op.drop_index('ix_users_is_member')
        batch_op.drop_index('ix_users_last_seen')
        batch_op.drop_index('ix_users_username')

    op.execute('DROP TABLE IF EXISTS users CASCADE')
    op.execute('DROP TABLE IF EXISTS forum_antwort CASCADE')
    with op.batch_alter_table('throw_data', schema=None) as batch_op:
        batch_op.drop_index('ix_throw_data_game_id')
        batch_op.drop_index('ix_throw_data_player_id')
        batch_op.drop_index('ix_throw_data_timestamp')

    op.execute('DROP TABLE IF EXISTS throw_data CASCADE')
    with op.batch_alter_table('forum_themen', schema=None) as batch_op:
        batch_op.drop_index('ix_forum_themen_erstellungsdatum')

    op.execute('DROP TABLE IF EXISTS forum_themen CASCADE')
    op.execute('DROP TABLE IF EXISTS post CASCADE')
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.drop_index('ix_player_name')

    op.execute('DROP TABLE IF EXISTS player CASCADE')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('player',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('join_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('average_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('games_played', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('training_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('highest_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('checkout_percentage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wins', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('losses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('highest_checkout', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='player_pkey'),
    sa.UniqueConstraint('email', name='player_email_key')
    )
    with op.batch_alter_table('player', schema=None) as batch_op:
        batch_op.create_index('ix_player_name', ['name'], unique=True)

    op.create_table('post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='post_pkey')
    )
    op.create_table('forum_themen',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('forum_themen_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('titel', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('inhalt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('erstellungsdatum', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('autor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['autor_id'], ['users.id'], name='forum_themen_autor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='forum_themen_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('forum_themen', schema=None) as batch_op:
        batch_op.create_index('ix_forum_themen_erstellungsdatum', ['erstellungsdatum'], unique=False)

    op.create_table('throw_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('angle', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('velocity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('game_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('target_segment', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='throw_data_game_id_fkey'),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name='throw_data_player_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='throw_data_pkey')
    )
    with op.batch_alter_table('throw_data', schema=None) as batch_op:
        batch_op.create_index('ix_throw_data_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('ix_throw_data_player_id', ['player_id'], unique=False)
        batch_op.create_index('ix_throw_data_game_id', ['game_id'], unique=False)

    op.create_table('forum_antwort',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('inhalt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('erstellungsdatum', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('autor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('thema_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['autor_id'], ['user.id'], name='forum_antwort_autor_id_fkey'),
    sa.ForeignKeyConstraint(['thema_id'], ['forum_thema.id'], name='forum_antwort_thema_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='forum_antwort_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('is_member', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('about_me', sa.VARCHAR(length=140), autoincrement=False, nullable=True),
    sa.Column('last_seen', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_users_username', ['username'], unique=True)
        batch_op.create_index('ix_users_last_seen', ['last_seen'], unique=False)
        batch_op.create_index('ix_users_is_member', ['is_member'], unique=False)
        batch_op.create_index('ix_users_is_admin', ['is_admin'], unique=False)
        batch_op.create_index('ix_users_email', ['email'], unique=True)

    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='posts_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index('ix_posts_title', ['title'], unique=False)
        batch_op.create_index('ix_posts_is_published', ['is_published'], unique=False)
        batch_op.create_index('ix_posts_created_at', ['created_at'], unique=False)

    op.create_table('event_participants',
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='event_participants_event_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='event_participants_user_id_fkey'),
    sa.PrimaryKeyConstraint('event_id', 'user_id', name='event_participants_pkey')
    )
    op.create_table('event',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='event_pkey')
    )
    op.create_table('game_players',
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='game_players_game_id_fkey'),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name='game_players_player_id_fkey'),
    sa.PrimaryKeyConstraint('game_id', 'player_id', name='game_players_pkey')
    )
    with op.batch_alter_table('game_players', schema=None) as batch_op:
        batch_op.create_index('idx_game_players_score', ['game_id', 'player_id', 'score'], unique=False)

    op.create_table('forum_thema',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titel', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('inhalt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('erstellungsdatum', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('autor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['autor_id'], ['user.id'], name='forum_thema_autor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='forum_thema_pkey')
    )
    op.create_table('players',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('join_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('average_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('games_played', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('training_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('highest_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('checkout_percentage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wins', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('losses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('highest_checkout', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='players_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='players_pkey'),
    sa.UniqueConstraint('user_id', name='players_user_id_key')
    )
    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.create_index('ix_players_name', ['name'], unique=True)
        batch_op.create_index('ix_players_join_date', ['join_date'], unique=False)
        batch_op.create_index('ix_players_active', ['active'], unique=False)
        batch_op.create_index('idx_player_stats', ['average_score', 'games_played', 'wins'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('about_me', sa.VARCHAR(length=140), autoincrement=False, nullable=True),
    sa.Column('last_seen', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_member', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_username', ['username'], unique=True)
        batch_op.create_index('ix_user_email', ['email'], unique=True)

    op.create_table('game',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player1_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player2_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('winner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player1_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player2_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player1_id'], ['user.id'], name='game_player1_id_fkey'),
    sa.ForeignKeyConstraint(['player2_id'], ['user.id'], name='game_player2_id_fkey'),
    sa.ForeignKeyConstraint(['winner_id'], ['user.id'], name='game_winner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='game_pkey')
    )
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('organizer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_participants', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_participants', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name='events_organizer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='events_pkey')
    )
    op.create_table('games',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player1_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player2_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('winner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player1_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player2_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('game_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player1_id'], ['users.id'], name='games_player1_id_fkey'),
    sa.ForeignKeyConstraint(['player2_id'], ['users.id'], name='games_player2_id_fkey'),
    sa.ForeignKeyConstraint(['winner_id'], ['users.id'], name='games_winner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='games_pkey')
    )
    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.create_index('ix_games_winner_id', ['winner_id'], unique=False)
        batch_op.create_index('ix_games_player2_id', ['player2_id'], unique=False)
        batch_op.create_index('ix_games_player1_id', ['player1_id'], unique=False)
        batch_op.create_index('ix_games_date', ['date'], unique=False)
        batch_op.create_index('idx_game_players', ['player1_id', 'player2_id'], unique=False)
        batch_op.create_index('idx_game_date_winner', ['date', 'winner_id'], unique=False)

    op.create_table('forum_antworten',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('inhalt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('erstellungsdatum', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('autor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('thema_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['autor_id'], ['users.id'], name='forum_antworten_autor_id_fkey'),
    sa.ForeignKeyConstraint(['thema_id'], ['forum_themen.id'], name='forum_antworten_thema_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='forum_antworten_pkey')
    )
    with op.batch_alter_table('forum_antworten', schema=None) as batch_op:
        batch_op.create_index('ix_forum_antworten_erstellungsdatum', ['erstellungsdatum'], unique=False)

    # ### end Alembic commands ###
